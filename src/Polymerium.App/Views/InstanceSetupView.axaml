<controls:Subpage xmlns="https://github.com/avaloniaui"
                  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                  xmlns:husk="https://github.com/d3ara1n/Huskui.Avalonia"
                  xmlns:vm="using:Polymerium.App.ViewModels"
                  xmlns:fi="clr-namespace:FluentIcons.Avalonia;assembly=FluentIcons.Avalonia"
                  xmlns:cp="using:Polymerium.App.Components"
                  xmlns:m="using:Polymerium.App.Models"
                  xmlns:icons="https://github.com/MahApps/IconPacks.Avalonia"
                  xmlns:huskc="https://github.com/d3ara1n/Huskui.Avalonia/Converters"
                  xmlns:trident="using:Trident.Abstractions.Repositories.Resources"
                  xmlns:controls="using:Polymerium.App.Controls"
                  mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="600" Padding="0"
                  x:Class="Polymerium.App.Views.InstanceSetupView" x:DataType="vm:InstanceSetupViewModel"
                  ScrollViewer.VerticalScrollBarVisibility="Disabled">
    <husk:BusyContainer>
        <husk:BusyContainer.IsBusy>
            <MultiBinding Converter="{x:Static BoolConverters.Or}">
                <Binding Path="State" Converter="{x:Static huskc:ObjectConverters.Match}" ConverterParameter="Updating" />
                <Binding Path="State" Converter="{x:Static huskc:ObjectConverters.Match}"
                         ConverterParameter="Deploying" />
            </MultiBinding>
        </husk:BusyContainer.IsBusy>
        <husk:BusyContainer.PendingContent>
            <husk:Card HorizontalAlignment="Center" VerticalAlignment="Center"
                       Background="{DynamicResource LayerSolidBackgroundBrush}">
                <StackPanel Spacing="8" Margin="24">
                    <husk:ProgressRing IsIndeterminate="{Binding UpdatingPending}" HorizontalAlignment="Center"
                                       Height="56" Width="56" Value="{Binding UpdatingProgress,Mode=OneWay}">
                        <husk:ProgressRing.Transitions>
                            <Transitions>
                                <DoubleTransition Property="Value" Easing="SineEaseOut"
                                                  Duration="{StaticResource ControlNormalAnimationDuration}" />
                            </Transitions>
                        </husk:ProgressRing.Transitions>
                    </husk:ProgressRing>
                    <TextBlock Text="Operating In Progress" FontWeight="Bold" HorizontalAlignment="Center" />
                </StackPanel>
            </husk:Card>
        </husk:BusyContainer.PendingContent>
        <Grid RowDefinitions="Auto,0,*">
            <Grid Grid.Row="0" ColumnDefinitions="*,8,Auto"
                  Margin="{StaticResource PageHeaderlessContentMargin}">
                <StackPanel Grid.Column="0" Spacing="4">
                    <TextBlock Text="{Binding Basic.Name,FallbackValue=Name}"
                               FontSize="{StaticResource ExtraLargeFontSize}" TextWrapping="Wrap" MaxLines="3"
                               TextTrimming="CharacterEllipsis" />
                    <StackPanel Orientation="Horizontal" Spacing="8">
                        <TextBlock Text="Minecraft:" />
                        <TextBlock Text="{Binding Basic.Version,FallbackValue=Version}" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Spacing="8">
                        <TextBlock Text="Mod Loader:" />
                        <TextBlock Text="{Binding LoaderLabel,FallbackValue=None}" />
                        <HyperlinkButton Content="Switch" />
                    </StackPanel>
                </StackPanel>
                <husk:SkeletonContainer Grid.Column="2" CornerRadius="{StaticResource MediumCornerRadius}"
                                        IsLoading="{Binding Reference,Converter={x:Static ObjectConverters.IsNull}}">
                    <husk:Card MaxWidth="320" BorderThickness="2"
                               BorderBrush="{DynamicResource ControlAccentBorderBrush}"
                               IsVisible="{Binding Basic.Source,Converter={x:Static ObjectConverters.IsNotNull}}">
                        <Grid RowDefinitions="*,8,Auto">
                            <Grid Grid.Row="0" ColumnDefinitions="Auto,8,*">
                                <Border Grid.Column="0" CornerRadius="{StaticResource SmallCornerRadius}" Margin="8"
                                        BorderBrush="{DynamicResource ControlAccentBorderBrush}" BorderThickness="2"
                                        BackgroundSizing="InnerBorderEdge" Height="42" Width="42">
                                    <Border.Background>
                                        <ImageBrush Source="{Binding Reference.Thumbnail,FallbackValue={x:Null}}"
                                                    Stretch="UniformToFill" />
                                    </Border.Background>
                                </Border>
                                <StackPanel Grid.Column="2" VerticalAlignment="Center" Spacing="2">
                                    <TextBlock Text="{Binding Reference.Name,FallbackValue=Package Name}"
                                               FontSize="{StaticResource LargeFontSize}"
                                               TextTrimming="CharacterEllipsis" />
                                    <HyperlinkButton Command="{Binding OpenSourceUrlCommand}"
                                                     CommandParameter="{Binding Reference.SourceUrl,FallbackValue={x:Null}}">
                                        <StackPanel Orientation="Horizontal" Spacing="4">
                                            <TextBlock
                                                Text="{Binding Reference.SourceLabel,FallbackValue=LABEL,Converter={x:Static huskc:StringConverters.ToUpper}}" />
                                            <fi:SymbolIcon Symbol="Open" FontSize="12" />
                                        </StackPanel>
                                    </HyperlinkButton>
                                </StackPanel>
                            </Grid>
                            <Grid Grid.Row="2" ColumnDefinitions="*,8,Auto,8,Auto">
                                <ComboBox Grid.Column="0"
                                          ItemsSource="{Binding Reference.Versions,FallbackValue={x:Null}}"
                                          SelectedItem="{Binding Reference.CurrentVersion,FallbackValue={x:Null}}">
                                    <ComboBox.SelectionBoxItemTemplate>
                                        <DataTemplate DataType="m:InstanceReferenceVersionModel">
                                            <husk:SwitchPresenter Value="{Binding IsCurrent,FallbackValue=False}"
                                                                  TargetType="x:Boolean">
                                                <husk:SwitchCase Value="True">
                                                    <TextBlock Text="{Binding Display,FallbackValue=Display}"
                                                               Foreground="{DynamicResource ControlAccentForegroundBrush}" />
                                                </husk:SwitchCase>
                                                <husk:SwitchCase Value="False">
                                                    <TextBlock Text="{Binding Display,FallbackValue=Display}" />
                                                </husk:SwitchCase>
                                            </husk:SwitchPresenter>
                                        </DataTemplate>
                                    </ComboBox.SelectionBoxItemTemplate>
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate DataType="m:InstanceReferenceVersionModel">
                                            <StackPanel>
                                                <husk:SwitchPresenter Value="{Binding IsCurrent,FallbackValue=False}"
                                                                      TargetType="x:Boolean">
                                                    <husk:SwitchCase Value="True">
                                                        <TextBlock Text="{Binding Display,FallbackValue=Display}"
                                                                   Foreground="{DynamicResource ControlAccentForegroundBrush}" />
                                                    </husk:SwitchCase>
                                                    <husk:SwitchCase Value="False">
                                                        <TextBlock Text="{Binding Display,FallbackValue=Display}" />
                                                    </husk:SwitchCase>
                                                </husk:SwitchPresenter>
                                                <DockPanel>
                                                    <StackPanel Orientation="Horizontal" DockPanel.Dock="Right">
                                                        <TextBlock Text="{Binding UpdatedAt}" />
                                                    </StackPanel>
                                                    <husk:SwitchPresenter TargetType="trident:ReleaseType"
                                                                          Value="{Binding ReleaseTypeRaw,FallbackValue=Release}">
                                                        <husk:SwitchCase Value="Release">
                                                            <husk:Tag Classes="Success"
                                                                      CornerRadius="{StaticResource SmallCornerRadius}">
                                                                <TextBlock Text="Release" />
                                                            </husk:Tag>
                                                        </husk:SwitchCase>
                                                        <husk:SwitchCase Value="Beta">
                                                            <husk:Tag Classes="Warning"
                                                                      CornerRadius="{StaticResource SmallCornerRadius}">
                                                                <TextBlock Text="Beta" />
                                                            </husk:Tag>
                                                        </husk:SwitchCase>
                                                        <husk:SwitchCase Value="Alpha">
                                                            <husk:Tag Classes="Danger"
                                                                      CornerRadius="{StaticResource SmallCornerRadius}">
                                                                <TextBlock Text="Alpha" />
                                                            </husk:Tag>
                                                        </husk:SwitchCase>
                                                    </husk:SwitchPresenter>
                                                </DockPanel>
                                            </StackPanel>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                                <Button Grid.Column="2" Command="{Binding UpdateCommand}"
                                        CommandParameter="{Binding Reference.CurrentVersion,FallbackValue={x:Null}}"
                                        IsEnabled="{Binding Reference.CurrentVersion.IsCurrent,FallbackValue=False,Converter={x:Static BoolConverters.Not}}">
                                    <!-- <icons:PackIconLucide Kind="Soup" -->
                                    <!--                       Height="{StaticResource MediumFontSize}" -->
                                    <!--                       Width="{StaticResource MediumFontSize}" -->
                                    <!--                       VerticalAlignment="Center" /> -->
                                    <fi:SymbolIcon Symbol="BoxArrowUp" FontSize="{StaticResource MediumFontSize}" />
                                </Button>
                                <Button Grid.Column="4" Command="{Binding ViewDetailsCommand}">
                                    <!-- <icons:PackIconLucide Kind="AppWindow" -->
                                    <!--                       Height="{StaticResource MediumFontSize}" -->
                                    <!--                       Width="{StaticResource MediumFontSize}" -->
                                    <!--                       VerticalAlignment="Center" /> -->
                                    <fi:SymbolIcon Symbol="WindowNew" FontSize="{StaticResource MediumFontSize}" />
                                </Button>
                            </Grid>
                        </Grid>
                    </husk:Card>
                </husk:SkeletonContainer>
            </Grid>
            <husk:SwitchPresenter Grid.Row="2" Value="{Binding IsRefreshing}" TargetType="x:Boolean">
                <husk:SwitchCase Value="False">
                    <cp:PackageContainer Items="{Binding Stage}"
                                         TotalCount="{Binding StageCount}"
                                         OpenUrlCommand="{Binding OpenSourceUrlCommand}"
                                         PrimaryCommand="{Binding ViewPackageCommand}" />
                </husk:SwitchCase>
                <husk:SwitchCase Value="True">
                    <StackPanel VerticalAlignment="Center" Spacing="8">
                        <husk:ProgressRing Width="56" Height="56" Value="{Binding RefreshingCount}"
                                           Maximum="{Binding StageCount}" />
                        <TextBlock HorizontalAlignment="Center">
                            <Run Text="Loading packages metadata..." />
                            <Run Text="(" Foreground="{DynamicResource ControlSecondaryForegroundBrush}" />
                            <Run Text="{Binding RefreshingCount,FallbackValue=0}" />
                            <Run Text="/" Foreground="{DynamicResource ControlSecondaryForegroundBrush}" />
                            <Run Text="{Binding StageCount,FallbackValue=514}" />
                            <Run Text=")" Foreground="{DynamicResource ControlSecondaryForegroundBrush}" />
                        </TextBlock>
                    </StackPanel>
                </husk:SwitchCase>
            </husk:SwitchPresenter>
        </Grid>
    </husk:BusyContainer>
</controls:Subpage>